openapi: 3.0.3
info:
  title: Task Manager API
  description: |
    A RESTful API for managing tasks in a modern task management application.
    
    ## Features
    - Create, read, update, and delete tasks
    - Filter tasks by completion status and priority
    - Sort tasks by various fields
    - Comprehensive validation and error handling
    
    ## Authentication
    Currently no authentication is required. This is a development API.
    
    ## Rate Limiting
    No rate limiting is currently implemented.
  version: 1.0.0
  contact:
    name: Task Manager API Support
    email: support@taskmanager.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:4000/api
    description: Development server
  - url: https://your-production-domain.com/api
    description: Production server

paths:
  /tasks:
    get:
      summary: List all tasks
      description: |
        Retrieve a list of all tasks with optional filtering and sorting.
        
        ### Query Parameters
        - `completed`: Filter by completion status (true/false)
        - `priority`: Filter by priority level (low/medium/high)
        - `sortBy`: Field to sort by (default: createdAt)
        - `sortOrder`: Sort order (asc/desc, default: desc)
      operationId: getAllTasks
      tags:
        - Tasks
      parameters:
        - name: completed
          in: query
          description: Filter tasks by completion status
          required: false
          schema:
            type: boolean
            example: false
        - name: priority
          in: query
          description: Filter tasks by priority level
          required: false
          schema:
            type: string
            enum: [low, medium, high]
            example: high
        - name: sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum: [createdAt, updatedAt, dueDate, priority, title]
            default: createdAt
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Successfully retrieved tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  count:
                    type: integer
                    description: Number of tasks returned
                    example: 5
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
              examples:
                success:
                  summary: Successful response with tasks
                  value:
                    success: true
                    count: 2
                    data:
                      - _id: "507f1f77bcf86cd799439011"
                        title: "Complete project documentation"
                        description: "Write comprehensive API documentation"
                        completed: false
                        priority: "high"
                        dueDate: "2024-01-15T00:00:00.000Z"
                        createdAt: "2024-01-10T10:30:00.000Z"
                        updatedAt: "2024-01-10T10:30:00.000Z"
                        status: "Pending"
                        daysUntilDue: 5
                      - _id: "507f1f77bcf86cd799439012"
                        title: "Review code changes"
                        description: "Review pull request #123"
                        completed: true
                        priority: "medium"
                        dueDate: "2024-01-12T00:00:00.000Z"
                        createdAt: "2024-01-08T14:20:00.000Z"
                        updatedAt: "2024-01-11T09:15:00.000Z"
                        status: "Completed"
                        daysUntilDue: -1
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create a new task
      description: |
        Create a new task with the provided information.
        
        ### Required Fields
        - `title`: Task title (1-200 characters)
        
        ### Optional Fields
        - `description`: Task description (max 1000 characters)
        - `priority`: Priority level (low/medium/high, default: medium)
        - `completed`: Completion status (default: false)
        - `dueDate`: Due date (ISO 8601 format, must be today or future)
      operationId: createTask
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
            examples:
              minimal:
                summary: Minimal task creation
                value:
                  title: "Buy groceries"
              complete:
                summary: Complete task creation
                value:
                  title: "Complete project documentation"
                  description: "Write comprehensive API documentation for the Task Manager"
                  priority: "high"
                  dueDate: "2024-01-15T00:00:00.000Z"
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Task created successfully"
                  data:
                    $ref: '#/components/schemas/Task'
              examples:
                success:
                  summary: Successful task creation
                  value:
                    success: true
                    message: "Task created successfully"
                    data:
                      _id: "507f1f77bcf86cd799439011"
                      title: "Complete project documentation"
                      description: "Write comprehensive API documentation"
                      completed: false
                      priority: "high"
                      dueDate: "2024-01-15T00:00:00.000Z"
                      createdAt: "2024-01-10T10:30:00.000Z"
                      updatedAt: "2024-01-10T10:30:00.000Z"
                      status: "Pending"
                      daysUntilDue: 5
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tasks/{id}:
    get:
      summary: Get a single task
      description: Retrieve a specific task by its ID.
      operationId: getTask
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
            example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Task'
              examples:
                success:
                  summary: Successful task retrieval
                  value:
                    success: true
                    data:
                      _id: "507f1f77bcf86cd799439011"
                      title: "Complete project documentation"
                      description: "Write comprehensive API documentation"
                      completed: false
                      priority: "high"
                      dueDate: "2024-01-15T00:00:00.000Z"
                      createdAt: "2024-01-10T10:30:00.000Z"
                      updatedAt: "2024-01-10T10:30:00.000Z"
                      status: "Pending"
                      daysUntilDue: 5
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update a task
      description: |
        Update an existing task. All fields are optional for updates.
        
        ### Update Rules
        - `title`: Must be 1-200 characters if provided
        - `description`: Must not exceed 1000 characters if provided
        - `priority`: Must be one of low/medium/high if provided
        - `completed`: Must be boolean if provided
        - `dueDate`: Must be valid ISO 8601 date (today or future) if provided
      operationId: updateTask
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
            example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
            examples:
              mark_complete:
                summary: Mark task as complete
                value:
                  completed: true
              update_priority:
                summary: Update priority and due date
                value:
                  priority: "high"
                  dueDate: "2024-01-20T00:00:00.000Z"
              full_update:
                summary: Full task update
                value:
                  title: "Updated task title"
                  description: "Updated task description"
                  completed: true
                  priority: "low"
                  dueDate: "2024-01-25T00:00:00.000Z"
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Task updated successfully"
                  data:
                    $ref: '#/components/schemas/Task'
              examples:
                success:
                  summary: Successful task update
                  value:
                    success: true
                    message: "Task updated successfully"
                    data:
                      _id: "507f1f77bcf86cd799439011"
                      title: "Updated task title"
                      description: "Updated task description"
                      completed: true
                      priority: "high"
                      dueDate: "2024-01-20T00:00:00.000Z"
                      createdAt: "2024-01-10T10:30:00.000Z"
                      updatedAt: "2024-01-12T15:45:00.000Z"
                      status: "Completed"
                      daysUntilDue: 8
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete a task
      description: Delete a specific task by its ID.
      operationId: deleteTask
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
            example: "507f1f77bcf86cd799439011"
      responses:
        '204':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Task:
      type: object
      required:
        - _id
        - title
        - completed
        - priority
        - createdAt
        - updatedAt
      properties:
        _id:
          type: string
          description: Unique identifier for the task
          pattern: '^[0-9a-fA-F]{24}$'
          example: "507f1f77bcf86cd799439011"
        title:
          type: string
          description: Task title
          minLength: 1
          maxLength: 200
          example: "Complete project documentation"
        description:
          type: string
          description: Task description
          maxLength: 1000
          example: "Write comprehensive API documentation for the Task Manager"
        completed:
          type: boolean
          description: Whether the task is completed
          default: false
          example: false
        priority:
          type: string
          description: Task priority level
          enum: [low, medium, high]
          default: medium
          example: high
        dueDate:
          type: string
          format: date-time
          description: Task due date (ISO 8601 format)
          example: "2024-01-15T00:00:00.000Z"
        createdAt:
          type: string
          format: date-time
          description: Task creation timestamp
          example: "2024-01-10T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Task last update timestamp
          example: "2024-01-10T10:30:00.000Z"
        status:
          type: string
          description: Computed task status
          enum: [Pending, Completed, Overdue]
          example: "Pending"
        daysUntilDue:
          type: integer
          nullable: true
          description: Number of days until due date (negative if overdue)
          example: 5

    CreateTaskRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: Task title
          minLength: 1
          maxLength: 200
          example: "Complete project documentation"
        description:
          type: string
          description: Task description
          maxLength: 1000
          example: "Write comprehensive API documentation"
        priority:
          type: string
          description: Task priority level
          enum: [low, medium, high]
          default: medium
          example: high
        completed:
          type: boolean
          description: Whether the task is completed
          default: false
          example: false
        dueDate:
          type: string
          format: date-time
          description: Task due date (ISO 8601 format, must be today or future)
          example: "2024-01-15T00:00:00.000Z"

    UpdateTaskRequest:
      type: object
      properties:
        title:
          type: string
          description: Task title
          minLength: 1
          maxLength: 200
          example: "Updated task title"
        description:
          type: string
          description: Task description
          maxLength: 1000
          example: "Updated task description"
        priority:
          type: string
          description: Task priority level
          enum: [low, medium, high]
          example: high
        completed:
          type: boolean
          description: Whether the task is completed
          example: true
        dueDate:
          type: string
          format: date-time
          description: Task due date (ISO 8601 format, must be today or future)
          example: "2024-01-20T00:00:00.000Z"

    ValidationError:
      type: object
      properties:
        field:
          type: string
          description: Field name that failed validation
          example: "title"
        message:
          type: string
          description: Validation error message
          example: "Title is required"
        value:
          type: string
          description: The value that failed validation
          example: ""

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error type or message
          example: "Validation failed"
        details:
          type: object
          description: Additional error details
          properties:
            message:
              type: string
              description: Detailed error message
              example: "Please check the provided data and try again"
            type:
              type: string
              description: Error type
              example: "ValidationError"
            validationErrors:
              type: array
              description: List of validation errors
              items:
                $ref: '#/components/schemas/ValidationError'

  responses:
    BadRequest:
      description: Bad request - Invalid input or malformed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            invalid_object_id:
              summary: Invalid ObjectId format
              value:
                error: "Resource not found"
                details:
                  message: "Invalid ObjectId format"
                  type: "CastError"
            malformed_json:
              summary: Malformed JSON request body
              value:
                error: "Internal server error"
                details:
                  message: "Unexpected end of JSON input"

    ValidationError:
      description: Validation failed - Request data does not meet requirements
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            missing_title:
              summary: Missing required title field
              value:
                error: "Validation failed"
                details:
                  message: "Please check the provided data and try again"
                  validationErrors:
                    - field: "title"
                      message: "Title is required"
                      value: ""
            invalid_priority:
              summary: Invalid priority value
              value:
                error: "Validation failed"
                details:
                  message: "Please check the provided data and try again"
                  validationErrors:
                    - field: "priority"
                      message: "Priority must be one of: low, medium, high"
                      value: "urgent"
            past_due_date:
              summary: Past due date
              value:
                error: "Validation failed"
                details:
                  message: "Please check the provided data and try again"
                  validationErrors:
                    - field: "dueDate"
                      message: "Due date must be today or in the future"
                      value: "2023-01-01T00:00:00.000Z"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            task_not_found:
              summary: Task not found
              value:
                error: "Task not found"
                details:
                  message: "No task found with ID: 507f1f77bcf86cd799439011"
                  type: "NotFoundError"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            server_error:
              summary: Internal server error
              value:
                error: "Internal server error"
                details:
                  message: "An unexpected error occurred"
                  type: "InternalServerError"

  tags:
    - name: Tasks
      description: Task management operations
